defmodule Up.Repo.Migrations.AddFrames do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:"stories.frames", primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :frame_number, :bigint
      add :image_url, :text

      add :story_id,
          references(:stories,
            column: :id,
            name: "stories.frames_story_id_fkey",
            type: :uuid,
            prefix: "public",
            on_delete: :delete_all
          ),
          null: false
    end

    create unique_index(:"stories.frames", [:story_id, :frame_number],
             name: "stories.frames_unique_frame_index"
           )
  end

  def down do
    drop_if_exists unique_index(:"stories.frames", [:story_id, :frame_number],
                     name: "stories.frames_unique_frame_index"
                   )

    drop constraint(:"stories.frames", "stories.frames_story_id_fkey")

    drop table(:"stories.frames")
  end
end
